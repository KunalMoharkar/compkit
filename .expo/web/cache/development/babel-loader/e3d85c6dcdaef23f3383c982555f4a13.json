{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kumar\\\\Desktop\\\\mywork\\\\react-native\\\\reactnav\\\\SitesScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Hackerrank from \"./images/img_hakerrank.png\";\n\nvar SitesContainer = function SitesContainer(props) {\n  return React.createElement(View, {\n    style: styles.itemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: data.source,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.imageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, data.name));\n};\n\nvar data = {\n  name: \"Hackerrank\",\n  source: Hackerrank,\n  url: \"www.hackerrank.com\"\n};\n\nvar SiteScreen = function (_React$Component) {\n  _inherits(SiteScreen, _React$Component);\n\n  var _super = _createSuper(SiteScreen);\n\n  function SiteScreen(props) {\n    _classCallCheck(this, SiteScreen);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(SiteScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(SitesContainer, {\n        props: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SiteScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  itemContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    height: 250,\n    width: 250,\n    resizeMode: 'contain'\n  },\n  imageText: {\n    fontSize: 40,\n    fontFamily: 'monospace'\n  }\n});\nexport default SiteScreen;","map":{"version":3,"sources":["C:/Users/kumar/Desktop/mywork/react-native/reactnav/SitesScreen.js"],"names":["React","Hackerrank","SitesContainer","props","styles","itemContainer","image","data","source","imageText","name","url","SiteScreen","container","Component","StyleSheet","create","display","flex","alignItems","justifyContent","height","width","resizeMode","fontSize","fontFamily"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,UAAP;;AAGA,IAAMC,cAAc,GAAC,SAAfA,cAAe,CAACC,KAAD,EAAS;AAE1B,SACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,MAAM,CAACE,KAArB;AAA4B,IAAA,MAAM,EAAEC,IAAI,CAACC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCF,IAAI,CAACG,IAArC,CAFJ,CADA;AAOH,CATD;;AAWA,IAAMH,IAAI,GACN;AACIG,EAAAA,IAAI,EAAC,YADT;AAEIF,EAAAA,MAAM,EAACP,UAFX;AAGIU,EAAAA,GAAG,EAAC;AAHR,CADJ;;IASMC,U;;;;;AAEF,sBAAYT,KAAZ,EAAkB;AAAA;;AAAA,6BACRA,KADQ;AAEjB;;;;6BAED;AACI,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAEN,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EAZoBP,KAAK,CAACc,S;;AAe/B,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAC;AACNI,IAAAA,OAAO,EAAC,MADF;AAENC,IAAAA,IAAI,EAAC,CAFC;AAGNC,IAAAA,UAAU,EAAC,QAHL;AAINC,IAAAA,cAAc,EAAC;AAJT,GADmB;AAO7Bf,EAAAA,aAAa,EAAC;AACVY,IAAAA,OAAO,EAAC,MADE;AAEVE,IAAAA,UAAU,EAAC,QAFD;AAGVC,IAAAA,cAAc,EAAC;AAHL,GAPe;AAY7Bd,EAAAA,KAAK,EAAC;AACFe,IAAAA,MAAM,EAAC,GADL;AAEFC,IAAAA,KAAK,EAAC,GAFJ;AAGFC,IAAAA,UAAU,EAAC;AAHT,GAZuB;AAiB7Bd,EAAAA,SAAS,EAAC;AACNe,IAAAA,QAAQ,EAAC,EADH;AAENC,IAAAA,UAAU,EAAC;AAFL;AAjBmB,CAAlB,CAAf;AA0BA,eAAeb,UAAf","sourcesContent":["import React from 'react';\r\nimport {Text, View, Button, FlatList, StyleSheet, Image} from 'react-native';\r\nimport Hackerrank from './images/img_hakerrank.png';\r\n\r\n\r\nconst SitesContainer=(props)=>{\r\n\r\n    return(\r\n    <View style={styles.itemContainer}>\r\n        <Image style={styles.image} source={data.source}></Image>\r\n        <Text style={styles.imageText}>{data.name}</Text>\r\n    </View>  \r\n    )  \r\n\r\n}\r\n\r\nconst data = (\r\n    {\r\n        name:\"Hackerrank\",\r\n        source:Hackerrank,\r\n        url:\"www.hackerrank.com\",\r\n    }\r\n)\r\n\r\n\r\nclass SiteScreen extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <View style={styles.container}>\r\n                <SitesContainer props={data}/>\r\n            </View>     \r\n            );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        display:'flex',\r\n        flex:1,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n    },\r\n    itemContainer:{\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',  \r\n    },\r\n    image:{\r\n        height:250,\r\n        width:250,\r\n        resizeMode:'contain',\r\n    },\r\n    imageText:{\r\n        fontSize:40,\r\n        fontFamily:'monospace',\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport default SiteScreen;"]},"metadata":{},"sourceType":"module"}