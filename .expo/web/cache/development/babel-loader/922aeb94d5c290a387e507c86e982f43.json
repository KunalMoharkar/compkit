{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kumar\\\\Desktop\\\\mywork\\\\react-native\\\\reactnav\\\\screens\\\\Quotes.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Navbar } from \"../components/Navbar\";\nimport Constants from 'expo-constants';\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, title));\n};\n\nvar Header = function Header() {\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }\n  }, \"Header\"));\n};\n\nvar Quotes = function (_React$Component) {\n  _inherits(Quotes, _React$Component);\n\n  var _super = _createSuper(Quotes);\n\n  function Quotes(props) {\n    var _this;\n\n    _classCallCheck(this, Quotes);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Quotes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var response, json;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://programming-quotes-api.herokuapp.com/quotes'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              json = _context.sent;\n              this.setState({\n                data: json\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, React.createElement(Navbar, {\n        toggleHandler: this.props.navigation.openDrawer,\n        content: \"Quotes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }), React.createElement(FlatList, {\n        data: this.state.data,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Item, {\n            title: item.en,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 39\n            }\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Quotes;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  item: {\n    backgroundColor: '#c1c3c7',\n    padding: 10,\n    borderBottomColor: '#7d8085',\n    borderRadius: 3,\n    borderBottomWidth: 5,\n    marginTop: 8,\n    marginBottom: 8,\n    marginLeft: 2,\n    marginRight: 2\n  },\n  title: {\n    fontSize: 18\n  }\n});\nexport default Quotes;","map":{"version":3,"sources":["C:/Users/kumar/Desktop/mywork/react-native/reactnav/screens/Quotes.js"],"names":["React","Navbar","Constants","Item","title","styles","item","Header","Quotes","props","state","data","fetch","response","json","setState","container","navigation","openDrawer","en","id","Component","StyleSheet","create","display","flex","justifyContent","alignItems","backgroundColor","padding","borderBottomColor","borderRadius","borderBottomWidth","marginTop","marginBottom","marginLeft","marginRight","fontSize"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAAQC,MAAR;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEC,IAAMC,IAAI,GAAC,SAALA,IAAK,OAAW;AAAA,MAATC,KAAS,QAATA,KAAS;AACnB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,KAA5B,CADF,CADF;AAMF,CAPD;;AASA,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAI;AAChB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN,CADJ;AAGF,CAJD;;IAMKC,M;;;;;AAEF,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAC;AADE,KAAX;AAFc;AAKjB;;;;;;;;;;;+CAIwBC,KAAK,CAAC,qDAAD,C;;;AAAtBC,cAAAA,Q;;+CACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,cAAAA,I;AACN,mBAAKC,QAAL,CAAc;AAAEJ,gBAAAA,IAAI,EAAEG;AAAR,eAAd;;;;;;;;;;;6BAKM;AACR,aACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAET,MAAM,CAACW,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,aAAa,EAAE,KAAKP,KAAL,CAAWQ,UAAX,CAAsBC,UAA7C;AAAyD,QAAA,OAAO,EAAC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,IADnB;AAEE,QAAA,UAAU,EAAE;AAAA,cAAGL,IAAH,SAAGA,IAAH;AAAA,iBAAc,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEA,IAAI,CAACa,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;AAAA,SAFd;AAGE,QAAA,YAAY,EAAE,sBAAAb,IAAI;AAAA,iBAAIA,IAAI,CAACc,EAAT;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADJ;AAWC;;;;EA9BgBpB,KAAK,CAACqB,S;;AAiC3B,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,OAAO,EAAC,MADC;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,cAAc,EAAC,QAHN;AAITC,IAAAA,UAAU,EAAC;AAJF,GADkB;AAO7BrB,EAAAA,IAAI,EAAE;AACJsB,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,iBAAiB,EAAC,SAHd;AAIJC,IAAAA,YAAY,EAAC,CAJT;AAKJC,IAAAA,iBAAiB,EAAC,CALd;AAMJC,IAAAA,SAAS,EAAC,CANN;AAOJC,IAAAA,YAAY,EAAC,CAPT;AAQJC,IAAAA,UAAU,EAAC,CARP;AASJC,IAAAA,WAAW,EAAC;AATR,GAPuB;AAkB7BhC,EAAAA,KAAK,EAAE;AACLiC,IAAAA,QAAQ,EAAE;AADL;AAlBsB,CAAlB,CAAf;AAuBE,eAAe7B,MAAf","sourcesContent":["import React from 'react';\r\nimport {FlatList, Text , View, StyleSheet, SafeAreaView} from 'react-native';\r\nimport {Navbar} from '../components/Navbar';\r\nimport Constants from 'expo-constants';\r\n\r\n const Item=({title})=>{\r\n    return (\r\n      <View style={styles.item}>\r\n        <Text style={styles.title}>{title}</Text>\r\n      </View>\r\n    );\r\n\r\n }\r\n\r\n const Header = ()=>{\r\n    return(\r\n        <View><Text>Header</Text></View>\r\n    )\r\n }\r\n\r\nclass Quotes extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data:[],\r\n        }\r\n    }\r\n\r\n     async componentDidMount() {\r\n        \r\n      const response = await fetch('https://programming-quotes-api.herokuapp.com/quotes');\r\n      const json = await response.json();\r\n      this.setState({ data: json });\r\n  \r\n      }\r\n\r\n    \r\n    render(){\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n          <Navbar toggleHandler={this.props.navigation.openDrawer} content=\"Quotes\"/>  \r\n          <FlatList\r\n            data={this.state.data}\r\n            renderItem={({ item }) => <Item title={item.en} />}\r\n            keyExtractor={item => item.id}\r\n\r\n          />\r\n        </SafeAreaView>\r\n      );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      display:'flex',\r\n      flex: 1,\r\n      justifyContent:'center',\r\n      alignItems:'center',\r\n    },\r\n    item: {\r\n      backgroundColor: '#c1c3c7',\r\n      padding: 10,\r\n      borderBottomColor:'#7d8085',\r\n      borderRadius:3,\r\n      borderBottomWidth:5,\r\n      marginTop:8,\r\n      marginBottom:8,\r\n      marginLeft:2,\r\n      marginRight:2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n    },\r\n  });\r\n  \r\n  export default Quotes;"]},"metadata":{},"sourceType":"module"}